name: Build TinyALSA for Android ARM (ndk-build)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'TinyALSA commit hash or tag to build'
        required: false
        default: 'master'

jobs:
  build_arm:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout TinyALSA source
        uses: actions/checkout@v4
        with:
          repository: tinyalsa/tinyalsa
          ref: ${{ github.event.inputs.version }}

      - name: Install Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip android-ndk-r25c-linux.zip
          echo "$PWD/android-ndk-r25c" >> $GITHUB_PATH

      - name: Create jni directory
        run: mkdir jni

      - name: Create Android.mk with absolute paths
        run: |
          echo "LOCAL_PATH := $(call my-dir)" > jni/Android.mk
          echo "" >> jni/Android.mk
          echo "include $(CLEAR_VARS)" >> jni/Android.mk
          echo "LOCAL_MODULE := tinyalsa_library" >> jni/Android.mk
          echo "LOCAL_SRC_FILES := \$(wildcard \$(LOCAL_PATH)/../src/*.c)" >> jni/Android.mk
          echo "LOCAL_C_INCLUDES := \$(LOCAL_PATH)/../include" >> jni/Android.mk
          echo "include $(BUILD_STATIC_LIBRARY)" >> jni/Android.mk
          echo "" >> jni/Android.mk
          echo "include $(CLEAR_VARS)" >> jni/Android.mk
          echo "LOCAL_MODULE := tinycap" >> jni/Android.mk
          echo "LOCAL_SRC_FILES := ../utils/tinycap.c" >> jni/Android.mk
          echo "LOCAL_STATIC_LIBRARIES := tinyalsa_library" >> jni/Android.mk
          echo "LOCAL_C_INCLUDES := \$(LOCAL_PATH)/../include" >> jni/Android.mk
          echo "include $(BUILD_EXECUTABLE)" >> jni/Android.mk
          echo "" >> jni/Android.mk
          echo "include $(CLEAR_VARS)" >> jni/Android.mk
          echo "LOCAL_MODULE := tinyplay" >> jni/Android.mk
          echo "LOCAL_SRC_FILES := ../utils/tinyplay.c" >> jni/Android.mk
          echo "LOCAL_STATIC_LIBRARIES := tinyalsa_library" >> jni/Android.mk
          echo "LOCAL_C_INCLUDES := \$(LOCAL_PATH)/../include" >> jni/Android.mk
          echo "include $(BUILD_EXECUTABLE)" >> jni/Android.mk
          echo "" >> jni/Android.mk
          echo "include $(CLEAR_VARS)" >> jni/Android.mk
          echo "LOCAL_MODULE := tinymix" >> jni/Android.mk
          echo "LOCAL_SRC_FILES := ../utils/tinymix.c" >> jni/Android.mk
          echo "LOCAL_STATIC_LIBRARIES := tinyalsa_library" >> jni/Android.mk
          echo "LOCAL_C_INCLUDES := \$(LOCAL_PATH)/../include" >> jni/Android.mk
          echo "include $(BUILD_EXECUTABLE)" >> jni/Android.mk

      - name: Create Application.mk for 32-bit
        run: |
          echo "APP_ABI := armeabi-v7a" > jni/Application.mk
          echo "APP_STL := c++_static" >> jni/Application.mk
          echo "APP_PLATFORM := android-21" >> jni/Application.mk
      
      - name: Build TinyALSA for ARM (32-bit) with ndk-build
        run: |
          export NDK_ROOT=$PWD/android-ndk-r25c
          export NDK_PROJECT_PATH=$PWD
          $NDK_ROOT/ndk-build -j$(nproc)

      - name: Archive ARM (32-bit) artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tinyalsa-arm-binaries
          path: |
            libs/armeabi-v7a/tinycap
            libs/armeabi-v7a/tinymix
            libs/armeabi-v7a/tinyplay
